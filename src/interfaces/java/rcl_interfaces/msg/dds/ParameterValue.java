/*
 * This class was automatically generated by jros2
 */
package rcl_interfaces.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   Used to determine which of the next *_value fields are set.
   ParameterType.PARAMETER_NOT_SET indicates that the parameter was not set
   (if gotten) or is uninitialized.
   Values are enumerated in `ParameterType.msg`.
*/
public class ParameterValue implements ROS2Message<ParameterValue>
{
   public static final java.lang.String name = "rcl_interfaces::msg::dds_::ParameterValue_";

   /**
      The type of this parameter, which corresponds to the appropriate field below.
   */
   private byte type_;
   /**
      Boolean value, can be either true or false.
   */
   private boolean bool_value_;
   /**
      Integer value ranging from -9,223,372,036,854,775,808 to
      9,223,372,036,854,775,807.
   */
   private long integer_value_;
   /**
      A double precision floating point value following IEEE 754.
   */
   private double double_value_;
   /**
      A textual value with no practical length limit.
   */
   private final StringBuilder string_value_;
   /**
      An array of bytes, used for non-textual information.
   */
   private final IDLByteSequence byte_array_value_;
   /**
      An array of boolean values.
   */
   private final IDLBoolSequence bool_array_value_;
   /**
      An array of 64-bit integer values.
   */
   private final IDLLongSequence integer_array_value_;
   /**
      An array of 64-bit floating point values.
   */
   private final IDLDoubleSequence double_array_value_;
   /**
      An array of string values.
   */
   private final IDLStringSequence string_array_value_;

   public ParameterValue()
   {
      string_value_ = new StringBuilder();
      byte_array_value_ = new IDLByteSequence();
      bool_array_value_ = new IDLBoolSequence();
      integer_array_value_ = new IDLLongSequence();
      double_array_value_ = new IDLDoubleSequence();
      string_array_value_ = new IDLStringSequence();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // type_
      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // bool_value_
      currentAlignment += 8 + CDRBuffer.alignment(currentAlignment, 8); // integer_value_
      currentAlignment += 8 + CDRBuffer.alignment(currentAlignment, 8); // double_value_
      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // string_value_
      currentAlignment += byte_array_value_.calculateSizeBytes(currentAlignment);
      currentAlignment += bool_array_value_.calculateSizeBytes(currentAlignment);
      currentAlignment += integer_array_value_.calculateSizeBytes(currentAlignment);
      currentAlignment += double_array_value_.calculateSizeBytes(currentAlignment);
      currentAlignment += string_array_value_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeByte(type_);
      buffer.writeBoolean(bool_value_);
      buffer.writeLong(integer_value_);
      buffer.writeDouble(double_value_);
      buffer.writeString(string_value_);
      byte_array_value_.serialize(buffer);
      bool_array_value_.serialize(buffer);
      integer_array_value_.serialize(buffer);
      double_array_value_.serialize(buffer);
      string_array_value_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      type_ = buffer.readByte();
      bool_value_ = buffer.readBoolean();
      integer_value_ = buffer.readLong();
      double_value_ = buffer.readDouble();
      buffer.readString(string_value_);
      byte_array_value_.deserialize(buffer);
      bool_array_value_.deserialize(buffer);
      integer_array_value_.deserialize(buffer);
      double_array_value_.deserialize(buffer);
      string_array_value_.deserialize(buffer);

   }

   @Override
   public java.lang.String getName()
   {
      return name;
   }

   @Override
   public void set(ParameterValue from)
   {
      type_ = from.type_;
      bool_value_ = from.bool_value_;
      integer_value_ = from.integer_value_;
      double_value_ = from.double_value_;
      string_value_.delete(0, string_value_.length());
      string_value_.insert(0, from.string_value_);
      byte_array_value_.set(from.byte_array_value_);
      bool_array_value_.set(from.bool_array_value_);
      integer_array_value_.set(from.integer_array_value_);
      double_array_value_.set(from.double_array_value_);
      string_array_value_.set(from.string_array_value_);

   }

   public byte gettype()
   {
      return type_;
   }

   public void settype(byte type_)
   {
      this.type_ = type_;
   }

   public boolean getbool_value()
   {
      return bool_value_;
   }

   public void setbool_value(boolean bool_value_)
   {
      this.bool_value_ = bool_value_;
   }

   public long getinteger_value()
   {
      return integer_value_;
   }

   public void setinteger_value(long integer_value_)
   {
      this.integer_value_ = integer_value_;
   }

   public double getdouble_value()
   {
      return double_value_;
   }

   public void setdouble_value(double double_value_)
   {
      this.double_value_ = double_value_;
   }

   public StringBuilder getstring_value()
   {
      return string_value_;
   }

   public IDLByteSequence getbyte_array_value()
   {
      return byte_array_value_;
   }

   public IDLBoolSequence getbool_array_value()
   {
      return bool_array_value_;
   }

   public IDLLongSequence getinteger_array_value()
   {
      return integer_array_value_;
   }

   public IDLDoubleSequence getdouble_array_value()
   {
      return double_array_value_;
   }

   public IDLStringSequence getstring_array_value()
   {
      return string_array_value_;
   }


}