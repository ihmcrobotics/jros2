/*
 * This class was automatically generated by jros2
 */
package nav_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class Goals implements ROS2Message<Goals>
{
   public static final java.lang.String name = "nav_msgs::msg::dds_::Goals_";

   /**
      This header will store the time at which the poses were computed (not to be confused with the stamps of the poses themselves)
      In the case that individual poses do not have their frame_id set or their timetamp set they will use the default value here.
   */
   private final std_msgs.msg.dds.Header header_;
   /**
      An array of goals to for navigation to achieve.
      The goals should be executed in the order of the array.
      The header and stamp are intended to be used for computing the position of the goals.
      They may vary to support cases of goals that are moving with respect to the robot.
   */
   private final IDLObjectSequence<geometry_msgs.msg.dds.PoseStamped> goals_;

   public Goals()
   {
      header_ = new std_msgs.msg.dds.Header();
      goals_ = new IDLObjectSequence<geometry_msgs.msg.dds.PoseStamped>(geometry_msgs.msg.dds.PoseStamped.class);

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
   }

   @Override
   public java.lang.String getName()
   {
      return name;
   }

   @Override
   public void set(Goals from)
   {
   }

   public std_msgs.msg.dds.Header getheader()
   {
      return header_;
   }

   public IDLObjectSequence<geometry_msgs.msg.dds.PoseStamped> getgoals()
   {
      return goals_;
   }


}