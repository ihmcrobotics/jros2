/*
 * This class was automatically generated by jros2
 */
package nav_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   This hold basic information about the characteristics of the OccupancyGrid
*/
public class MapMetaData implements ROS2Message<MapMetaData>
{
   public static final java.lang.String name = "nav_msgs::msg::dds_::MapMetaData_";

   /**
      The time at which the map was loaded
   */
   private final builtin_interfaces.msg.dds.Time map_load_time_;
   /**
      The map resolution [m/cell]
   */
   private float resolution_;
   /**
      Map width [cells]
   */
   private int width_;
   /**
      Map height [cells]
   */
   private int height_;
   /**
      The origin of the map [m, m, rad].  This is the real-world pose of the
      bottom left corner of cell (0,0) in the map.
   */
   private final geometry_msgs.msg.dds.Pose origin_;

   public MapMetaData()
   {
      map_load_time_ = new builtin_interfaces.msg.dds.Time();
      origin_ = new geometry_msgs.msg.dds.Pose();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // resolution_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // width_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // height_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeFloat(resolution_);
      buffer.writeInt(width_);
      buffer.writeInt(height_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      resolution_ = buffer.readFloat();
      width_ = buffer.readInt();
      height_ = buffer.readInt();

   }

   @Override
   public void set(MapMetaData from)
   {
      resolution_ = from.resolution_;
      width_ = from.width_;
      height_ = from.height_;

   }

   public builtin_interfaces.msg.dds.Time getmap_load_time()
   {
      return map_load_time_;
   }

   public float getresolution()
   {
      return resolution_;
   }

   public void setresolution(float resolution_)
   {
      this.resolution_ = resolution_;
   }

   public int getwidth()
   {
      return width_;
   }

   public void setwidth(int width_)
   {
      this.width_ = width_;
   }

   public int getheight()
   {
      return height_;
   }

   public void setheight(int height_)
   {
      this.height_ = height_;
   }

   public geometry_msgs.msg.dds.Pose getorigin()
   {
      return origin_;
   }


}