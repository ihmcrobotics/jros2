/*
 * This class was automatically generated by jros2
 */
package shape_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class Plane implements ROS2Message<Plane>
{
   public static final java.lang.String name = "shape_msgs::msg::dds_::Plane_";

   /**
      Representation of a plane, using the plane equation ax + by + cz + d = 0.

      a := coef[0]
      b := coef[1]
      c := coef[2]
      d := coef[3]
   */
   private final double[] coef_;

   public Plane()
   {
      coef_ = new double[4];

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += (4 * 8) + CDRBuffer.alignment(currentAlignment, (4 * 8)); // coef_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      for (int i = 0; i < coef_.length; ++i)
      {
         buffer.writeDouble(coef_[i]);
      }

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      for (int i = 0; i < coef_.length; ++i)
      {
      coef_[i] = buffer.readDouble();
      }

   }

   @Override
   public java.lang.String getName()
   {
      return name;
   }

   @Override
   public void set(Plane from)
   {
      for (int i = 0; i < coef_.length; ++i)
      {
         coef_[i] = from.coef_[i];
      }

   }

   public double[] getcoef()
   {
      return coef_;
   }


}