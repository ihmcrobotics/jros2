/*
 * This class was automatically generated by jros2
 */
package trajectory_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class JointTrajectory implements ROS2Message<JointTrajectory>
{
   public static final String name = "trajectory_msgs::msg::dds_::JointTrajectory_";

   /**
       The names of the active joints in each trajectory point. These names are
       ordered and must correspond to the values in each trajectory point.
   */
   private  joint_names_;
   /**
       Array of trajectory points, which describe the positions, velocities,
       accelerations and/or efforts of the joints at each time point.
   */
   private trajectory_msgs.msg.dds.JointTrajectoryPoint points_;

   public JointTrajectory()
   {
      joint_names_ = new ();
      points_ = new trajectory_msgs.msg.dds.JointTrajectoryPoint();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += joint_names_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      joint_names_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      joint_names_.deserialize(buffer);

   }

   @Override
   public String getName()
   {
      return name;
   }

   @Override
   public void set(JointTrajectory from)
   {
      joint_names_.set(from.joint_names_);

   }

   public  getjoint_names()
   {
      return joint_names_;
   }

   public trajectory_msgs.msg.dds.JointTrajectoryPoint getpoints()
   {
      return points_;
   }


}