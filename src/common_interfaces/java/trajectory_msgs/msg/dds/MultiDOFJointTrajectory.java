/*
 * This class was automatically generated by jros2
 */
package trajectory_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
    A representation of a multi-dof joint trajectory (each point is a transformation)
    Each point along the trajectory will include an array of positions/velocities/accelerations
    that has the same length as the array of joint names, and has the same order of joints as
    the joint names array.
*/
public class MultiDOFJointTrajectory implements ROS2Message<MultiDOFJointTrajectory>
{
   public static final String name = "trajectory_msgs::msg::dds_::MultiDOFJointTrajectory_";

   private IDLStringSequence joint_names_;
   private trajectory_msgs.msg.dds.MultiDOFJointTrajectoryPoint points_;

   public MultiDOFJointTrajectory()
   {
      joint_names_ = new IDLStringSequence();
      points_ = new trajectory_msgs.msg.dds.MultiDOFJointTrajectoryPoint();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += joint_names_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      joint_names_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      joint_names_.deserialize(buffer);

   }

   @Override
   public String getName()
   {
      return name;
   }

   @Override
   public void set(MultiDOFJointTrajectory from)
   {
      joint_names_.set(from.joint_names_);

   }

   public IDLStringSequence getjoint_names()
   {
      return joint_names_;
   }

   public trajectory_msgs.msg.dds.MultiDOFJointTrajectoryPoint getpoints()
   {
      return points_;
   }


}