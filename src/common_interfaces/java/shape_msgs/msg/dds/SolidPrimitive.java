/*
 * This class was automatically generated by jros2
 */
package shape_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class SolidPrimitive implements ROS2Message<SolidPrimitive>
{
   public static final java.lang.String name = "shape_msgs::msg::dds_::SolidPrimitive_";

   /**
      The type of the shape
   */
   private byte type_;
   /**
      The dimensions of the shape
   */
   private IDLDoubleSequence dimensions_;
   private geometry_msgs.msg.dds.Polygon polygon_;

   public SolidPrimitive()
   {
      dimensions_ = new IDLDoubleSequence();
      polygon_ = new geometry_msgs.msg.dds.Polygon();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // type_
      currentAlignment += dimensions_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeByte(type_);
      dimensions_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      type_ = buffer.readByte();
      dimensions_.deserialize(buffer);

   }

   @Override
   public java.lang.String getName()
   {
      return name;
   }

   @Override
   public void set(SolidPrimitive from)
   {
      type_ = from.type_;
      dimensions_.set(from.dimensions_);

   }

   public byte gettype()
   {
      return type_;
   }

   public void settype(byte type_)
   {
      this.type_ = type_;
   }

   public IDLDoubleSequence getdimensions()
   {
      return dimensions_;
   }

   public geometry_msgs.msg.dds.Polygon getpolygon()
   {
      return polygon_;
   }


}