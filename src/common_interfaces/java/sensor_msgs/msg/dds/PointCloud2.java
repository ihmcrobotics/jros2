/*
 * This class was automatically generated by jros2
 */
package sensor_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class PointCloud2 implements ROS2Message<PointCloud2>
{
   public static final String name = "sensor_msgs::msg::dds_::PointCloud2_";

   /**
       2D structure of the point cloud. If the cloud is unordered, height is
       1 and width is the length of the point cloud.
   */
   private int height_;
   private int width_;
   /**
       Describes the channels and their layout in the binary data blob.
   */
   private sensor_msgs.msg.dds.PointField fields_;
   private IDLByteSequence data_;
   private boolean is_dense_;

   public PointCloud2()
   {
      fields_ = new sensor_msgs.msg.dds.PointField();
      data_ = new IDLByteSequence();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // height_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // width_
      currentAlignment += data_.calculateSizeBytes(currentAlignment);
      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // is_dense_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeInt(height_);
      buffer.writeInt(width_);
      data_.serialize(buffer);
      buffer.writeBoolean(is_dense_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      height_ = buffer.readInt();
      width_ = buffer.readInt();
      data_.deserialize(buffer);
      is_dense_ = buffer.readBoolean();

   }

   @Override
   public String getName()
   {
      return name;
   }

   @Override
   public void set(PointCloud2 from)
   {
      height_ = from.height_;
      width_ = from.width_;
      data_.set(from.data_);
      is_dense_ = from.is_dense_;

   }

   public int getheight()
   {
      return height_;
   }

   public void setheight(int height_)
   {
      this.height_ = height_;
   }

   public int getwidth()
   {
      return width_;
   }

   public void setwidth(int width_)
   {
      this.width_ = width_;
   }

   public sensor_msgs.msg.dds.PointField getfields()
   {
      return fields_;
   }

   public IDLByteSequence getdata()
   {
      return data_;
   }

   public boolean getis_dense()
   {
      return is_dense_;
   }

   public void setis_dense(boolean is_dense_)
   {
      this.is_dense_ = is_dense_;
   }


}