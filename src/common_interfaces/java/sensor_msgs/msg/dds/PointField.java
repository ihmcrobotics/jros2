/*
 * This class was automatically generated by jros2
 */
package sensor_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class PointField implements ROS2Message<PointField>
{
   public static final String name = "sensor_msgs::msg::dds_::PointField_";

   /**
       Common PointField names are x, y, z, intensity, rgb, rgba
   */
   private StringBuilder name_;
   private int offset_;
   private int count_;

   public PointField()
   {
   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // name_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // offset_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // count_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeString(name_);
      buffer.writeInt(offset_);
      buffer.writeInt(count_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      buffer.readString(name_);
      offset_ = buffer.readInt();
      count_ = buffer.readInt();

   }

   @Override
   public String getName()
   {
      return name;
   }

   @Override
   public void set(PointField from)
   {
      name_ = from.name_;
      offset_ = from.offset_;
      count_ = from.count_;

   }

   public StringBuilder getname()
   {
      return name_;
   }

   public void setname(StringBuilder name_)
   {
      this.name_ = name_;
   }

   public int getoffset()
   {
      return offset_;
   }

   public void setoffset(int offset_)
   {
      this.offset_ = offset_;
   }

   public int getcount()
   {
      return count_;
   }

   public void setcount(int count_)
   {
      this.count_ = count_;
   }


}