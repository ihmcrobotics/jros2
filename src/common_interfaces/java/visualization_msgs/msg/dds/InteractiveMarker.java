/*
 * This class was automatically generated by jros2
 */
package visualization_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class InteractiveMarker implements ROS2Message<InteractiveMarker>
{
   public static final String name = "visualization_msgs::msg::dds_::InteractiveMarker_";

   /**
       Identifying string. Must be globally unique in
       the topic that this message is sent through.
   */
   private StringBuilder name_;
   /**
       Short description (< 40 characters).
   */
   private StringBuilder description_;
   /**
       Scale to be used for default controls (default=1).
   */
   private float scale_;
   /**
       All menu and submenu entries associated with this marker.
   */
   private visualization_msgs.msg.dds.MenuEntry menu_entries_;
   /**
       List of controls displayed for this marker.
   */
   private visualization_msgs.msg.dds.InteractiveMarkerControl controls_;

   public InteractiveMarker()
   {
      menu_entries_ = new visualization_msgs.msg.dds.MenuEntry();
      controls_ = new visualization_msgs.msg.dds.InteractiveMarkerControl();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // name_
      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // description_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // scale_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeString(name_);
      buffer.writeString(description_);
      buffer.writeFloat(scale_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      buffer.readString(name_);
      buffer.readString(description_);
      scale_ = buffer.readFloat();

   }

   @Override
   public String getName()
   {
      return name;
   }

   @Override
   public void set(InteractiveMarker from)
   {
      name_ = from.name_;
      description_ = from.description_;
      scale_ = from.scale_;

   }

   public StringBuilder getname()
   {
      return name_;
   }

   public void setname(StringBuilder name_)
   {
      this.name_ = name_;
   }

   public StringBuilder getdescription()
   {
      return description_;
   }

   public void setdescription(StringBuilder description_)
   {
      this.description_ = description_;
   }

   public float getscale()
   {
      return scale_;
   }

   public void setscale(float scale_)
   {
      this.scale_ = scale_;
   }

   public visualization_msgs.msg.dds.MenuEntry getmenu_entries()
   {
      return menu_entries_;
   }

   public visualization_msgs.msg.dds.InteractiveMarkerControl getcontrols()
   {
      return controls_;
   }


}