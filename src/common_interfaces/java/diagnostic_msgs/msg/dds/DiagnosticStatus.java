/*
 * This class was automatically generated by jros2
 */
package diagnostic_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
*/
public class DiagnosticStatus implements ROS2Message<DiagnosticStatus>
{
   public static final String name = "diagnostic_msgs::msg::dds_::DiagnosticStatus_";

   /**
       Level of operation enumerated above.
   */
   private byte level_;
   /**
       A description of the test/component reporting.
   */
   private StringBuilder name_;
   /**
       A description of the status.
   */
   private StringBuilder message_;
   /**
       A hardware unique string.
   */
   private StringBuilder hardware_id_;
   /**
       An array of values associated with the status.
   */
   private diagnostic_msgs.msg.dds.KeyValue values_;

   public DiagnosticStatus()
   {
      values_ = new diagnostic_msgs.msg.dds.KeyValue();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // level_
      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // name_
      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // message_
      currentAlignment += -1 + CDRBuffer.alignment(currentAlignment, -1); // hardware_id_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeByte(level_);
      buffer.(name_);
      buffer.(message_);
      buffer.(hardware_id_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      level_ = buffer.readByte();
      name_ = buffer.();
      message_ = buffer.();
      hardware_id_ = buffer.();

   }

   @Override
   public String getName()
   {
      return name;
   }

   @Override
   public void set(DiagnosticStatus from)
   {
      level_ = from.level_;
      name_ = from.name_;
      message_ = from.message_;
      hardware_id_ = from.hardware_id_;

   }

   public byte getlevel()
   {
      return level_;
   }

   public void setlevel(byte level_)
   {
      this.level_ = level_;
   }

   public StringBuilder getname()
   {
      return name_;
   }

   public void setname(StringBuilder name_)
   {
      this.name_ = name_;
   }

   public StringBuilder getmessage()
   {
      return message_;
   }

   public void setmessage(StringBuilder message_)
   {
      this.message_ = message_;
   }

   public StringBuilder gethardware_id()
   {
      return hardware_id_;
   }

   public void sethardware_id(StringBuilder hardware_id_)
   {
      this.hardware_id_ = hardware_id_;
   }

   public diagnostic_msgs.msg.dds.KeyValue getvalues()
   {
      return values_;
   }


}