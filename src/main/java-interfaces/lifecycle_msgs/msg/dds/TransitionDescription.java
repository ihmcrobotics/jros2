/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
(lifecycle_msgs/TransitionDescription.msg):
##################################################################################
   # The transition id and label of this description.
   Transition transition

   # The current state from which this transition transitions.
   State start_state

   # The desired target state of this transition.
   State goal_state

##################################################################################

 */
package lifecycle_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class TransitionDescription implements ROS2Message<TransitionDescription>
{
   public static final java.lang.String name = "lifecycle_msgs::msg::dds_::TransitionDescription_";

   /**
      The transition id and label of this description.
   */
   private final lifecycle_msgs.msg.dds.Transition transition_;
   /**
      The current state from which this transition transitions.
   */
   private final lifecycle_msgs.msg.dds.State start_state_;
   /**
      The desired target state of this transition.
   */
   private final lifecycle_msgs.msg.dds.State goal_state_;

   public TransitionDescription()
   {
      transition_ = new lifecycle_msgs.msg.dds.Transition();
      start_state_ = new lifecycle_msgs.msg.dds.State();
      goal_state_ = new lifecycle_msgs.msg.dds.State();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += transition_.calculateSizeBytes(currentAlignment);
      currentAlignment += start_state_.calculateSizeBytes(currentAlignment);
      currentAlignment += goal_state_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      transition_.serialize(buffer);
      start_state_.serialize(buffer);
      goal_state_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      transition_.deserialize(buffer);
      start_state_.deserialize(buffer);
      goal_state_.deserialize(buffer);

   }

   @Override
   public void set(TransitionDescription from)
   {
      transition_.set(from.transition_);
      start_state_.set(from.start_state_);
      goal_state_.set(from.goal_state_);

   }

   public lifecycle_msgs.msg.dds.Transition gettransition()
   {
      return transition_;
   }

   public lifecycle_msgs.msg.dds.State getstart_state()
   {
      return start_state_;
   }

   public lifecycle_msgs.msg.dds.State getgoal_state()
   {
      return goal_state_;
   }


}