/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
(statistics_msgs/StatisticDataPoint.msg):
##################################################################################
        #############################################
        # This holds the structure of a single data point of a StatisticDataType.
        #
        # This message is used in MetricsStatisticsMessage, defined in MetricsStatisticsMessage.msg.
        #
        # Examples of the value of data point are
        # - average size of messages received
        # - standard deviation of the period of messages published
        # - maximum age of messages published
        #
        # A value of nan represents no data is available.
        # One example is that standard deviation is only available when there are two or more data points but there is only one,
        # and in this case the value would be nan.
        # +inf and -inf are not allowed.
        #
        #############################################

        # The statistic type of this data point, defined in StatisticDataType.msg
        # Default value should be StatisticDataType.STATISTICS_DATA_TYPE_UNINITIALIZED (0).
        uint8 data_type

        # The value of the data point
        float64 data

##################################################################################

 */
package statistics_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   ############################################
   This holds the structure of a single data point of a StatisticDataType.

   This message is used in MetricsStatisticsMessage, defined in MetricsStatisticsMessage.msg.

   Examples of the value of data point are
   - average size of messages received
   - standard deviation of the period of messages published
   - maximum age of messages published

   A value of nan represents no data is available.
   One example is that standard deviation is only available when there are two or more data points but there is only one,
   and in this case the value would be nan.
   +inf and -inf are not allowed.

   ############################################
*/
public class StatisticDataPoint implements ROS2Message<StatisticDataPoint>
{
   public static final java.lang.String name = "statistics_msgs::msg::dds_::StatisticDataPoint_";

   /**
      The statistic type of this data point, defined in StatisticDataType.msg
      Default value should be StatisticDataType.STATISTICS_DATA_TYPE_UNINITIALIZED (0).
   */
   private byte data_type_;
   /**
      The value of the data point
   */
   private double data_;

   public StatisticDataPoint()
   {
   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // data_type_
      currentAlignment += 8 + CDRBuffer.alignment(currentAlignment, 8); // data_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeByte(data_type_);
      buffer.writeDouble(data_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      data_type_ = buffer.readByte();
      data_ = buffer.readDouble();

   }

   @Override
   public void set(StatisticDataPoint from)
   {
      data_type_ = from.data_type_;
      data_ = from.data_;

   }

   public byte getdata_type()
   {
      return data_type_;
   }

   public void setdata_type(byte data_type_)
   {
      this.data_type_ = data_type_;
   }

   public double getdata()
   {
      return data_;
   }

   public void setdata(double data_)
   {
      this.data_ = data_;
   }


}