/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(builtin_interfaces/Time.msg)
##################################################################################
   # This message communicates ROS Time defined here:
   # https://design.ros2.org/articles/clock_and_time.html

   # The seconds component, valid over all int32 values.
   int32 sec

   # The nanoseconds component, valid in the range [0, 1e9), to be added to the seconds component.
   # e.g.
   # The time -1.7 seconds is represented as {sec: -2, nanosec: 3e8}
   # The time 1.7 seconds is represented as {sec: 1, nanosec: 7e8}
   uint32 nanosec

##################################################################################

 */
package builtin_interfaces.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   This message communicates ROS Time defined here:
   https://design.ros2.org/articles/clock_and_time.html
*/
public class Time implements ROS2Message<Time>
{
   public static final java.lang.String name = "builtin_interfaces::msg::dds_::Time_";

   /**
      The seconds component, valid over all int32 values.
   */
   private int sec_;
   /**
      The nanoseconds component, valid in the range [0, 1e9), to be added to the seconds component.
      e.g.
      The time -1.7 seconds is represented as {sec: -2, nanosec: 3e8}
      The time 1.7 seconds is represented as {sec: 1, nanosec: 7e8}
   */
   private int nanosec_;

   public Time()
   {
   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // sec_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // nanosec_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeInt(sec_);
      buffer.writeInt(nanosec_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      sec_ = buffer.readInt();
      nanosec_ = buffer.readInt();

   }

   @Override
   public void set(Time from)
   {
      sec_ = from.sec_;
      nanosec_ = from.nanosec_;

   }

   public int getsec()
   {
      return sec_;
   }

   public void setsec(int sec_)
   {
      this.sec_ = sec_;
   }

   public int getnanosec()
   {
      return nanosec_;
   }

   public void setnanosec(int nanosec_)
   {
      this.nanosec_ = nanosec_;
   }


}