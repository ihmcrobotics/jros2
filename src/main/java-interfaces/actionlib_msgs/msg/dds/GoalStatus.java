/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(actionlib_msgs/GoalStatus.msg)
##################################################################################
   GoalID goal_id
   uint8 status
   uint8 PENDING         = 0   # The goal has yet to be processed by the action server.
   uint8 ACTIVE          = 1   # The goal is currently being processed by the action server.
   uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                               #   and has since completed its execution (Terminal State).
   uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server
                               #   (Terminal State).
   uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                               #    to some failure (Terminal State).
   uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                               #    because the goal was unattainable or invalid (Terminal State).
   uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                               #    and has not yet completed execution.
   uint8 RECALLING       = 7   # The goal received a cancel request before it started executing, but
                               #    the action server has not yet confirmed that the goal is canceled.
   uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                               #    and was successfully cancelled (Terminal State).
   uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not
                               #    be sent over the wire by an action server.

   # Allow for the user to associate a string with GoalStatus for debugging.
   string text

##################################################################################

 */
package actionlib_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class GoalStatus implements ROS2Message<GoalStatus>
{
   public static final java.lang.String name = "actionlib_msgs::msg::dds_::GoalStatus_";

   private final actionlib_msgs.msg.dds.GoalID goal_id_;
   private byte status_;
   public static final byte PENDING = 0; // The goal has yet to be processed by the action server.
   public static final byte ACTIVE = 1; // The goal is currently being processed by the action server.
   public static final byte PREEMPTED = 2; // The goal received a cancel request after it started executing
   /**
      and has since completed its execution (Terminal State).
   */
   public static final byte SUCCEEDED = 3; // The goal was achieved successfully by the action server
   /**
      (Terminal State).
   */
   public static final byte ABORTED = 4; // The goal was aborted during execution by the action server due
   /**
      to some failure (Terminal State).
   */
   public static final byte REJECTED = 5; // The goal was rejected by the action server without being processed,
   /**
      because the goal was unattainable or invalid (Terminal State).
   */
   public static final byte PREEMPTING = 6; // The goal received a cancel request after it started executing
   /**
      and has not yet completed execution.
   */
   public static final byte RECALLING = 7; // The goal received a cancel request before it started executing, but
   /**
      the action server has not yet confirmed that the goal is canceled.
   */
   public static final byte RECALLED = 8; // The goal received a cancel request before it started executing
   /**
      and was successfully cancelled (Terminal State).
   */
   public static final byte LOST = 9; // An action client can determine that a goal is LOST. This should not
   /**
      Allow for the user to associate a string with GoalStatus for debugging.
   */
   private final StringBuilder text_;

   public GoalStatus()
   {
      goal_id_ = new actionlib_msgs.msg.dds.GoalID();
      text_ = new StringBuilder();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += goal_id_.calculateSizeBytes(currentAlignment);
      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // status_
      currentAlignment += (1 * text_.length()) + CDRBuffer.alignment(currentAlignment, (1 * text_.length())); // text_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      goal_id_.serialize(buffer);
      buffer.writeByte(status_);
      buffer.writeString(text_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      goal_id_.deserialize(buffer);
      status_ = buffer.readByte();
      buffer.readString(text_);

   }

   @Override
   public void set(GoalStatus from)
   {
      goal_id_.set(from.goal_id_);
      status_ = from.status_;
      text_.delete(0, text_.length());
      text_.insert(0, from.text_);

   }

   public actionlib_msgs.msg.dds.GoalID getGoalId()
   {
      return goal_id_;
   }

   public byte getStatus()
   {
      return status_;
   }

   public void setStatus(byte status_)
   {
      this.status_ = status_;
   }

   public StringBuilder getText()
   {
      return text_;
   }


}