/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.
 *
 * Original .msg file content (visualization_msgs/UVCoordinate.msg):

# Location of the pixel as a ratio of the width of a 2D texture.
# Values should be in range: [0.0-1.0].
float32 u
float32 v


 */
package visualization_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class UVCoordinate implements ROS2Message<UVCoordinate>
{
   public static final java.lang.String name = "visualization_msgs::msg::dds_::UVCoordinate_";

   /**
      Location of the pixel as a ratio of the width of a 2D texture.
      Values should be in range: [0.0-1.0].
   */
   private float u_;
   private float v_;

   public UVCoordinate()
   {
   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // u_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // v_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeFloat(u_);
      buffer.writeFloat(v_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      u_ = buffer.readFloat();
      v_ = buffer.readFloat();

   }

   @Override
   public void set(UVCoordinate from)
   {
      u_ = from.u_;
      v_ = from.v_;

   }

   public float getu()
   {
      return u_;
   }

   public void setu(float u_)
   {
      this.u_ = u_;
   }

   public float getv()
   {
      return v_;
   }

   public void setv(float v_)
   {
      this.v_ = v_;
   }


}