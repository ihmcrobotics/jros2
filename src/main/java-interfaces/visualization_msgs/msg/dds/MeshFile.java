/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(visualization_msgs/MeshFile.msg)
##################################################################################
   # Used to send raw mesh files.

   # The filename is used for both debug purposes and to provide a file extension
   # for whatever parser is used.
   string filename

   # This stores the raw text of the mesh file.
   uint8[] data

##################################################################################

 */
package visualization_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   Used to send raw mesh files.
*/
public class MeshFile implements ROS2Message<MeshFile>
{
   public static final java.lang.String name = "visualization_msgs::msg::dds_::MeshFile_";

   /**
      The filename is used for both debug purposes and to provide a file extension
      for whatever parser is used.
   */
   private final StringBuilder filename_;
   /**
      This stores the raw text of the mesh file.
   */
   private final IDLByteSequence data_;

   public MeshFile()
   {
      filename_ = new StringBuilder();
      data_ = new IDLByteSequence();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += (1 * filename_.length()) + CDRBuffer.alignment(currentAlignment, (1 * filename_.length())); // filename_
      currentAlignment += data_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeString(filename_);
      data_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      buffer.readString(filename_);
      data_.deserialize(buffer);

   }

   @Override
   public void set(MeshFile from)
   {
      filename_.delete(0, filename_.length());
      filename_.insert(0, from.filename_);
      data_.set(from.data_);

   }

   public StringBuilder getFilename()
   {
      return filename_;
   }

   public IDLByteSequence getData()
   {
      return data_;
   }


}