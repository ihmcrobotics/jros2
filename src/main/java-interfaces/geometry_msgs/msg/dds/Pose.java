/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
(geometry_msgs/Pose.msg):
##################################################################################
        # A representation of pose in free space, composed of position and orientation.

        Point position
        Quaternion orientation

##################################################################################

 */
package geometry_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   A representation of pose in free space, composed of position and orientation.
*/
public class Pose implements ROS2Message<Pose>
{
   public static final java.lang.String name = "geometry_msgs::msg::dds_::Pose_";

   private final geometry_msgs.msg.dds.Point position_;
   private final geometry_msgs.msg.dds.Quaternion orientation_;

   public Pose()
   {
      position_ = new geometry_msgs.msg.dds.Point();
      orientation_ = new geometry_msgs.msg.dds.Quaternion();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += position_.calculateSizeBytes(currentAlignment);
      currentAlignment += orientation_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      position_.serialize(buffer);
      orientation_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      position_.deserialize(buffer);
      orientation_.deserialize(buffer);

   }

   @Override
   public void set(Pose from)
   {
      position_.set(from.position_);
      orientation_.set(from.orientation_);

   }

   public geometry_msgs.msg.dds.Point getposition()
   {
      return position_;
   }

   public geometry_msgs.msg.dds.Quaternion getorientation()
   {
      return orientation_;
   }


}