/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.
 *
 * Original .msg file content (geometry_msgs/PointStamped.msg):

# This represents a Point with reference coordinate frame and timestamp

std_msgs/Header header
Point point


 */
package geometry_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   This represents a Point with reference coordinate frame and timestamp
*/
public class PointStamped implements ROS2Message<PointStamped>
{
   public static final java.lang.String name = "geometry_msgs::msg::dds_::PointStamped_";

   private final std_msgs.msg.dds.Header header_;
   private final geometry_msgs.msg.dds.Point point_;

   public PointStamped()
   {
      header_ = new std_msgs.msg.dds.Header();
      point_ = new geometry_msgs.msg.dds.Point();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += header_.calculateSizeBytes(currentAlignment);
      currentAlignment += point_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      header_.serialize(buffer);
      point_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      header_.deserialize(buffer);
      point_.deserialize(buffer);

   }

   @Override
   public void set(PointStamped from)
   {
      header_.set(from.header_);
      point_.set(from.point_);

   }

   public std_msgs.msg.dds.Header getheader()
   {
      return header_;
   }

   public geometry_msgs.msg.dds.Point getpoint()
   {
      return point_;
   }


}