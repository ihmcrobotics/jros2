/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
(geometry_msgs/PoseArray.msg):
##################################################################################
   # An array of poses with a header for global reference.

   std_msgs/Header header

   Pose[] poses

##################################################################################

 */
package geometry_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   An array of poses with a header for global reference.
*/
public class PoseArray implements ROS2Message<PoseArray>
{
   public static final java.lang.String name = "geometry_msgs::msg::dds_::PoseArray_";

   private final std_msgs.msg.dds.Header header_;
   private final IDLObjectSequence<geometry_msgs.msg.dds.Pose> poses_;

   public PoseArray()
   {
      header_ = new std_msgs.msg.dds.Header();
      poses_ = new IDLObjectSequence<geometry_msgs.msg.dds.Pose>(geometry_msgs.msg.dds.Pose.class);

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += header_.calculateSizeBytes(currentAlignment);
      currentAlignment += poses_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      header_.serialize(buffer);
      poses_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      header_.deserialize(buffer);
      poses_.deserialize(buffer);

   }

   @Override
   public void set(PoseArray from)
   {
      header_.set(from.header_);
      poses_.set(from.poses_);

   }

   public std_msgs.msg.dds.Header getheader()
   {
      return header_;
   }

   public IDLObjectSequence<geometry_msgs.msg.dds.Pose> getposes()
   {
      return poses_;
   }


}