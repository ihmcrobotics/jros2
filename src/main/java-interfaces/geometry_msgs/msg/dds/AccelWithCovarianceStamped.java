/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
(geometry_msgs/AccelWithCovarianceStamped.msg):
##################################################################################
   # This represents an estimated accel with reference coordinate frame and timestamp.
   std_msgs/Header header
   AccelWithCovariance accel

##################################################################################

 */
package geometry_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class AccelWithCovarianceStamped implements ROS2Message<AccelWithCovarianceStamped>
{
   public static final java.lang.String name = "geometry_msgs::msg::dds_::AccelWithCovarianceStamped_";

   /**
      This represents an estimated accel with reference coordinate frame and timestamp.
   */
   private final std_msgs.msg.dds.Header header_;
   private final geometry_msgs.msg.dds.AccelWithCovariance accel_;

   public AccelWithCovarianceStamped()
   {
      header_ = new std_msgs.msg.dds.Header();
      accel_ = new geometry_msgs.msg.dds.AccelWithCovariance();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += header_.calculateSizeBytes(currentAlignment);
      currentAlignment += accel_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      header_.serialize(buffer);
      accel_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      header_.deserialize(buffer);
      accel_.deserialize(buffer);

   }

   @Override
   public void set(AccelWithCovarianceStamped from)
   {
      header_.set(from.header_);
      accel_.set(from.accel_);

   }

   public std_msgs.msg.dds.Header getheader()
   {
      return header_;
   }

   public geometry_msgs.msg.dds.AccelWithCovariance getaccel()
   {
      return accel_;
   }


}