/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(geometry_msgs/Transform.msg)
##################################################################################
   # This represents the transform between two coordinate frames in free space.

   Vector3 translation
   Quaternion rotation

##################################################################################

 */
package geometry_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   This represents the transform between two coordinate frames in free space.
*/
public class Transform implements ROS2Message<Transform>
{
   public static final java.lang.String name = "geometry_msgs::msg::dds_::Transform_";

   private final geometry_msgs.msg.dds.Vector3 translation_;
   private final geometry_msgs.msg.dds.Quaternion rotation_;

   public Transform()
   {
      translation_ = new geometry_msgs.msg.dds.Vector3();
      rotation_ = new geometry_msgs.msg.dds.Quaternion();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += translation_.calculateSizeBytes(currentAlignment);
      currentAlignment += rotation_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      translation_.serialize(buffer);
      rotation_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      translation_.deserialize(buffer);
      rotation_.deserialize(buffer);

   }

   @Override
   public void set(Transform from)
   {
      translation_.set(from.translation_);
      rotation_.set(from.rotation_);

   }

   public geometry_msgs.msg.dds.Vector3 gettranslation()
   {
      return translation_;
   }

   public geometry_msgs.msg.dds.Quaternion getrotation()
   {
      return rotation_;
   }


}