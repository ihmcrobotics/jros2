/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
(sensor_msgs/LaserEcho.msg):
##################################################################################
   # This message is a submessage of MultiEchoLaserScan and is not intended
   # to be used separately.

   float32[] echoes  # Multiple values of ranges or intensities.
                     # Each array represents data from the same angle increment.

##################################################################################

 */
package sensor_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   This message is a submessage of MultiEchoLaserScan and is not intended
   to be used separately.
*/
public class LaserEcho implements ROS2Message<LaserEcho>
{
   public static final java.lang.String name = "sensor_msgs::msg::dds_::LaserEcho_";

   private final IDLFloatSequence echoes_;

   public LaserEcho()
   {
      echoes_ = new IDLFloatSequence();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += echoes_.calculateSizeBytes(currentAlignment);

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      echoes_.serialize(buffer);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      echoes_.deserialize(buffer);

   }

   @Override
   public void set(LaserEcho from)
   {
      echoes_.set(from.echoes_);

   }

   public IDLFloatSequence getechoes()
   {
      return echoes_;
   }


}