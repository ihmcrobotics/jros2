/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(sensor_msgs/NavSatStatus.msg)
##################################################################################
   # Navigation Satellite fix status for any Global Navigation Satellite System.
   #
   # Whether to output an augmented fix is determined by both the fix
   # type and the last time differential corrections were received.  A
   # fix is valid when status >= STATUS_FIX.

   int8 STATUS_NO_FIX =  -1        # unable to fix position
   int8 STATUS_FIX =      0        # unaugmented fix
   int8 STATUS_SBAS_FIX = 1        # with satellite-based augmentation
   int8 STATUS_GBAS_FIX = 2        # with ground-based augmentation

   int8 status

   # Bits defining which Global Navigation Satellite System signals were
   # used by the receiver.

   uint16 SERVICE_GPS =     1
   uint16 SERVICE_GLONASS = 2
   uint16 SERVICE_COMPASS = 4      # includes BeiDou.
   uint16 SERVICE_GALILEO = 8

   uint16 service

##################################################################################

 */
package sensor_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   Navigation Satellite fix status for any Global Navigation Satellite System.

   Whether to output an augmented fix is determined by both the fix
   type and the last time differential corrections were received.  A
   fix is valid when status >= STATUS_FIX.
*/
public class NavSatStatus implements ROS2Message<NavSatStatus>
{
   public static final java.lang.String name = "sensor_msgs::msg::dds_::NavSatStatus_";

   public static final byte STATUS_NO_FIX = -1; // unable to fix position
   public static final byte STATUS_FIX = 0; // unaugmented fix
   public static final byte STATUS_SBAS_FIX = 1; // with satellite-based augmentation
   public static final byte STATUS_GBAS_FIX = 2; // with ground-based augmentation
   private byte status_;
   public static final short SERVICE_GPS = 1;
   public static final short SERVICE_GLONASS = 2;
   public static final short SERVICE_COMPASS = 4; // includes BeiDou.
   public static final short SERVICE_GALILEO = 8;
   private short service_;

   public NavSatStatus()
   {
   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 1 + CDRBuffer.alignment(currentAlignment, 1); // status_
      currentAlignment += 2 + CDRBuffer.alignment(currentAlignment, 2); // service_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeByte(status_);
      buffer.writeShort(service_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      status_ = buffer.readByte();
      service_ = buffer.readShort();

   }

   @Override
   public void set(NavSatStatus from)
   {
      status_ = from.status_;
      service_ = from.service_;

   }

   public byte getStatus()
   {
      return status_;
   }

   public void setStatus(byte status_)
   {
      this.status_ = status_;
   }

   public short getService()
   {
      return service_;
   }

   public void setService(short service_)
   {
      this.service_ = service_;
   }


}