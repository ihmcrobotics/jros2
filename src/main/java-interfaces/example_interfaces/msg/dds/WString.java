/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(example_interfaces/WString.msg)
##################################################################################
   # This is an example message of using a primitive datatype, wstring.
   # If you want to test with this that's fine, but if you are deploying
   # it into a system you should create a semantically meaningful message type.
   # If you want to embed it in another message, use the primitive data type instead.
   wstring data

##################################################################################

 */
package example_interfaces.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class WString implements ROS2Message<WString>
{
   public static final java.lang.String name = "example_interfaces::msg::dds_::WString_";

   /**
      This is an example message of using a primitive datatype, wstring.
      If you want to test with this that's fine, but if you are deploying
      it into a system you should create a semantically meaningful message type.
      If you want to embed it in another message, use the primitive data type instead.
   */
   private final StringBuilder data_;

   public WString()
   {
      data_ = new StringBuilder();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4) + data_.length() + 1;

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeWString(data_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      buffer.readWString(data_);

   }

   @Override
   public void set(WString from)
   {
      data_.delete(0, data_.length());
      data_.insert(0, from.data_);

   }

   public StringBuilder getData()
   {
      return data_;
   }


}