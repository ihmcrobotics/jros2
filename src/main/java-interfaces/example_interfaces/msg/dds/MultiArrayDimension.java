/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.
 *
 * Original .msg file content (example_interfaces/MultiArrayDimension.msg):

# This is an example of using complex datatypes.
# It is not recommended to use directly.
# To use a similar datastruct please define a custom message with appropriate semantic meaning.

string label   # label of given dimension
uint32 size    # size of given dimension (in type units)
uint32 stride  # stride of given dimension


 */
package example_interfaces.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

/**
   This is an example of using complex datatypes.
   It is not recommended to use directly.
   To use a similar datastruct please define a custom message with appropriate semantic meaning.
*/
public class MultiArrayDimension implements ROS2Message<MultiArrayDimension>
{
   public static final java.lang.String name = "example_interfaces::msg::dds_::MultiArrayDimension_";

   private final StringBuilder label_;
   private int size_;
   private int stride_;

   public MultiArrayDimension()
   {
      label_ = new StringBuilder();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += (1 * label_.length()) + CDRBuffer.alignment(currentAlignment, (1 * label_.length())); // label_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // size_
      currentAlignment += 4 + CDRBuffer.alignment(currentAlignment, 4); // stride_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeString(label_);
      buffer.writeInt(size_);
      buffer.writeInt(stride_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      buffer.readString(label_);
      size_ = buffer.readInt();
      stride_ = buffer.readInt();

   }

   @Override
   public void set(MultiArrayDimension from)
   {
      label_.delete(0, label_.length());
      label_.insert(0, from.label_);
      size_ = from.size_;
      stride_ = from.stride_;

   }

   public StringBuilder getlabel()
   {
      return label_;
   }

   public int getsize()
   {
      return size_;
   }

   public void setsize(int size_)
   {
      this.size_ = size_;
   }

   public int getstride()
   {
      return stride_;
   }

   public void setstride(int stride_)
   {
      this.stride_ = stride_;
   }


}