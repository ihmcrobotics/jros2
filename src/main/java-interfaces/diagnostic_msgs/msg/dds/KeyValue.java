/*
 * This class was automatically generated by jros2.
 * Do not modify this file directly.

##################################################################################
This file was generated from the following content:
(diagnostic_msgs/KeyValue.msg)
##################################################################################
   # What to label this value when viewing.
   string key
   # A value to track over time.
   string value

##################################################################################

 */
package diagnostic_msgs.msg.dds;

import us.ihmc.fastddsjava.cdr.CDRBuffer;
import us.ihmc.fastddsjava.cdr.idl.*;
import us.ihmc.jros2.ROS2Message;

public class KeyValue implements ROS2Message<KeyValue>
{
   public static final java.lang.String name = "diagnostic_msgs::msg::dds_::KeyValue_";

   /**
      What to label this value when viewing.
   */
   private final StringBuilder key_;
   /**
      A value to track over time.
   */
   private final StringBuilder value_;

   public KeyValue()
   {
      key_ = new StringBuilder();
      value_ = new StringBuilder();

   }

   @Override
   public int calculateSizeBytes(int currentAlignment)
   {
      int initialAlignment = currentAlignment;

      currentAlignment += (1 * key_.length()) + CDRBuffer.alignment(currentAlignment, (1 * key_.length())); // key_
      currentAlignment += (1 * value_.length()) + CDRBuffer.alignment(currentAlignment, (1 * value_.length())); // value_

      return currentAlignment - initialAlignment;
   }

   @Override
   public void serialize(CDRBuffer buffer)
   {
      buffer.writeString(key_);
      buffer.writeString(value_);

   }

   @Override
   public void deserialize(CDRBuffer buffer)
   {
      buffer.readString(key_);
      buffer.readString(value_);

   }

   @Override
   public void set(KeyValue from)
   {
      key_.delete(0, key_.length());
      key_.insert(0, from.key_);
      value_.delete(0, value_.length());
      value_.insert(0, from.value_);

   }

   public StringBuilder getKey()
   {
      return key_;
   }

   public StringBuilder getValue()
   {
      return value_;
   }


}